package BinaryTrees;

public class Tree {
  private  Node root;
  
  public Node findNode(int key){
	  Node current = root;
	  while(current.iData != key){
		  if(key > current.iData){
			  current = current.rightNode;
		  }else{
			  current = current.leftNode;
		  }
		  
		  if(current == null){
			  return null;
		  }
	  }	
	  return current;
  }
  
  public void insertNode(int key, double data){
	  Node newNode = new Node(key, data);
	  
	  Node current = root;
	  Node lastSeenNotNullNode = null;  
	  if(current == null){
		  root = newNode;
		  return;
	  }
	  while(true){
		  lastSeenNotNullNode = current;
		  if(key >= current.iData){
			  current = current.rightNode;
			  if(current == null){
				  lastSeenNotNullNode.rightNode = newNode;
				  return
			  }
		  }else{
			  current = current.leftNode;
			  if(current == null){
				  lastSeenNotNullNode.leftNode = newNode;
				  return;
			  }
		  }	  
		  
	  }
  }
  
  public void deleteNode(int key){
	  
  }
    
}
